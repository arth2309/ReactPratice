// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using peoplehawk_api;

#nullable disable

namespace peoplehawk_api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240717045414_addforeignkey")]
    partial class addforeignkey
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("peoplehawk_api.Models.Chart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("A")
                        .HasColumnType("integer");

                    b.Property<int>("C")
                        .HasColumnType("integer");

                    b.Property<int>("E")
                        .HasColumnType("integer");

                    b.Property<int>("I")
                        .HasColumnType("integer");

                    b.Property<int>("R")
                        .HasColumnType("integer");

                    b.Property<int>("S")
                        .HasColumnType("integer");

                    b.Property<string>("career_code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Charts");
                });

            modelBuilder.Entity("peoplehawk_api.Models.CourseInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("color1")
                        .HasColumnType("text");

                    b.Property<string>("color2")
                        .HasColumnType("text");

                    b.Property<string>("courses")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("features")
                        .HasColumnType("text");

                    b.Property<string>("likes")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CourseInterests");
                });

            modelBuilder.Entity("peoplehawk_api.Models.ResumeFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<string>("FilePath")
                        .HasColumnType("text");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ResumeFiles");
                });

            modelBuilder.Entity("peoplehawk_api.Models.ResumeFile", b =>
                {
                    b.HasOne("peoplehawk_api.Models.Chart", "Chart")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chart");
                });
#pragma warning restore 612, 618
        }
    }
}
